# i8virfm9ubb9ny9uaxii6wty5pv2q11zgxheufli6suflgtyb2usxmghcaz4ib41
# jz248xwzxepgyf9t7n9iuyvqiqzbv8dmdpf3hi4alqz8enkuek03xwtyvt2t4jxq -- personal
# 27wwhznqbl7cfg9hioafoxi3ktqs26zhatn32ekvy2iwa46cneqj08dcolm3rwwc -- api
version: 2.1

orbs:
  node: circleci/node@5.2.0
  docker: circleci/docker@2.6.0

jobs:
  test-app:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: '20.11.1'
      - run:
          name: nodejs version
          command: node --version
      - run:
          name: install pnpm
          command: npm install -g pnpm 
      - run:
          name: install dependencies
          command: pnpm install
      - run:
          name: testing api rest
          command: pnpm run test
  create-container:
    parameters:
      environment:
        default: string
        type: string
    executor: docker/machine
    steps:
      - checkout
      - run:
          name: Set environment variables
          command: |
            if [ << parameters.environment >> = "stg" ]; then
              echo "export URL_MONGO=$MONGO_URI" >> $BASH_ENV
            else
              echo "export URL_MONGO=$MONGO_URI_PROD" >> $BASH_ENV
            fi
      - run:
          name: show keys secrets
          command: |
            echo ${MONGO_USER}
            echo ${MONGO_PASS}
            echo ${URL_MONGO}
      - docker/build:
          name: Build Docker image
          image: $DOCKER_USER/api-ideas
          extra_build_args: |
            --build-arg UM=$MONGO_USER \
            --build-arg PM=$MONGO_PASS \
            --build-arg UriM=$URL_MONGO
      - docker/push:
          image: $DOCKER_USER/api-ideas
# end jobs

workflows:
  deploy-api-ideas:
    jobs:
      - test-app:
          filters:
            branches:
              only: master-stg
      - create-container:
          environment: stg
          context:
            - docker-secrets
          requires:
            - test-app
      # - deploy-to-heroku:
      #     # environment: stg
      #     context:
      #       - docker-secrets
      #     requires:
      #       - create-container
      - hold-deploy-prod:
          type: approval
          filters:
            branches:
              only: master
      - create-container:
          environment: prod
          context:
            - docker-secrets
          requires:
            - hold-deploy-prod
      # - deploy-to-heroku:
      #     environment: prod
      #     context:
      #       - docker-secrets
      #     requires:
      #       - hold-deploy-prod
