# i8virfm9ubb9ny9uaxii6wty5pv2q11zgxheufli6suflgtyb2usxmghcaz4ib41
# jz248xwzxepgyf9t7n9iuyvqiqzbv8dmdpf3hi4alqz8enkuek03xwtyvt2t4jxq -- personal
# 27wwhznqbl7cfg9hioafoxi3ktqs26zhatn32ekvy2iwa46cneqj08dcolm3rwwc -- api
# con $CIRCLE_TAG puedo manipular las versiones, ya que es la etiqueta de github
version: 2.1

orbs:
  node: circleci/node@5.2.0
  docker: circleci/docker@2.6.0

jobs:
  test-app:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: '20.11.1'
      - run:
          name: nodejs version
          command: node --version
      - run:
          name: install pnpm
          command: npm install -g pnpm 
      - run:
          name: install dependencies
          command: pnpm install
      - run:
          name: testing api rest
          command: pnpm run test
  create-container:
    parameters:
      environment:
        default: string
        type: string
    executor: docker/machine
    steps:
      - checkout
      - run:
          name: Set environment variables
          command: |
            if [ "<< parameters.environment >>" = "stg" ]; then
              echo "export DB=$BDSTAGING" >> $BASH_ENV
            else
              echo "export DB=$BDPROD" >> $BASH_ENV
            fi
      - run:
          name: Variables
          command: |
            COMMIT_HASH=$(echo $CIRCLE_SHA1 | cut -c1-7)
            echo "valor DB: $DB"
            echo "valor commit: $COMMIT_HASH"
      - run: |
          echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - docker/build:
          image: $DOCKER_USER/api-ideas
          tag: $COMMIT_HASH
          extra_build_args: |
            --build-arg UM=$MONGO_USER \
            --build-arg PM=$MONGO_PASS \
            --build-arg DNSM=$DNSM \
            --build-arg DB=$DB \
            --build-arg APPNAME=$APPNAME \
      - docker/push:
          image: $DOCKER_USER/api-ideas:$COMMIT_HASH
  deploy-to-koyeb:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: "install koyeb"
          command: |
            sudo apt update
            sudo apt install -y curl wget
            wget https://github.com/koyeb/koyeb-cli/releases/download/v4.3.0/koyeb-cli_4.3.0_linux_amd64.tar.gz
            tar -xzf koyeb-cli_4.3.0_linux_amd64.tar.gz
            sudo mv koyeb /usr/local/bin/
            koyeb --version
      - run:
          name: "deploy api"
          command: |
            koyeb service create api-ideas --app app-backend-udemy --docker docker.io/19910209/api-ideas:$COMMIT_HASH --token jz248xwzxepgyf9t7n9iuyvqiqzbv8dmdpf3hi4alqz8enkuek03xwtyvt2t4jxq --port 80 --region was --autoscaling-average-cpu 0 --autoscaling-average-mem 0 --autoscaling-concurrent-requests 0 --autoscaling-requests-per-second 0 --autoscaling-requests-response-time 0 --instance-type free
# end jobs

workflows:
  deploy-api-ideas:
    jobs:
      - test-app:
          filters:
            branches:
              only: master-stg
      - create-container:
          environment: stg
          context:
            - docker-secrets
            - mongo-secrets
          requires:
            - test-app
      # - deploy-to-heroku:
      #     # environment: stg
      #     context:
      #       - docker-secrets
      #     requires:
      #       - create-container
      - hold-deploy-prod:
          type: approval
          filters:
            branches:
              only: master
      - create-container:
          environment: prod
          context:
            - docker-secrets
          requires:
            - hold-deploy-prod
      # - deploy-to-heroku:
      #     environment: prod
      #     context:
      #       - docker-secrets
      #     requires:
      #       - hold-deploy-prod
